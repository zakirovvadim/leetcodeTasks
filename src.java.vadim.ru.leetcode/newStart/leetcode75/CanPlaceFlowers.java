package newStart.leetcode75;
//605. Can Place Flowers
public class CanPlaceFlowers {
    public static void main(String[] args) {
//        int[] flowerbed = {1,0,0,0,0,0,1};
        int[] flowerbed2 = {1,0,0,0,0,1};
        int n = 2;
        CanPlaceFlowers canPlaceFlowers = new CanPlaceFlowers();
        boolean result = canPlaceFlowers.canPlaceFlowers(flowerbed2, n);
        System.out.println(result);
    }
    public boolean canPlaceFlowers(int[] flowerbed, int n) {
        if (n == 0) return true; // –ï—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ —Å–∞–∂–∞—Ç—å —Ü–≤–µ—Ç—ã, —Å—Ä–∞–∑—É true

        for (int i = 0; i < flowerbed.length; i++) {
            if (flowerbed[i] == 0) {
                boolean leftEmpty = (i == 0) || (flowerbed[i - 1] == 0);
                boolean rightEmpty = (i == flowerbed.length - 1) || (flowerbed[i + 1] == 0);

                if (leftEmpty && rightEmpty) {
                    flowerbed[i] = 1; // –°–∞–¥–∏–º —Ü–≤–µ—Ç–æ–∫
                    n--; // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω—É–∂–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤

                    if (n == 0) return true; // –í—Å–µ —Ü–≤–µ—Ç—ã –ø–æ—Å–∞–∂–µ–Ω—ã

                    i++; // üî• –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —è—á–µ–π–∫—É, —Ç.–∫. —É–∂–µ –ø–æ—Å–∞–¥–∏–ª–∏ —Ä—è–¥–æ–º
                }
            }
        }
        return n == 0; // –ï—Å–ª–∏ –ø–æ—Å–∞–¥–∏–ª–∏ –≤—Å–µ —Ü–≤–µ—Ç—ã, true, –∏–Ω–∞—á–µ false
    }
}
